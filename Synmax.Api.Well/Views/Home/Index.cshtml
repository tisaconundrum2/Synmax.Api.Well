@{
    ViewData["Title"] = "Home Page";
}
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />

<div class="container">
    <div class="text-center">
        <h1 class="display-4">Welcome! Add your polygon coordinates</h1>
    </div>

    <!-- Add map container -->
    <div id="map" style="height: 400px; margin-bottom: 20px;"></div>

    <p>Please write your polygon coordinates below.</p>
    <p>Format: </p>
    <pre>
[(32.81,-104.19),(32.66,-104.32),(32.54,-104.24),(32.50,-104.03),(32.73,-104.01),(32.79,-103.91),(32.84,-104.05),(32.81,-104.19)]
    </pre>
    <form asp-controller="GeoSpatial" asp-action="PolygonSearch" method="post" id="coordForm">
        <textarea name="geoJson" class="form-control" rows="10" placeholder="Paste your Coordinates here..."
            id="coordInput"></textarea>
        <div class="mt-2">
            <button type="submit" class="btn btn-primary">Submit</button>
            <button type="button" id="downloadBtn" class="btn btn-secondary">Download CSV</button>
        </div>
    </form>
</div>

<!-- Add Leaflet JS before closing body tag -->
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
<script>
    // Initialize map
    const map = L.map('map').setView([32.7, -104.1], 9);

    // Add OpenStreetMap tiles
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '© OpenStreetMap contributors'
    }).addTo(map);

    // Form submit handler
    document.getElementById('coordForm').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const coordStr = document.getElementById('coordInput').value;
        const coords = JSON.parse(coordStr.replace(/\(/g, '[').replace(/\)/g, ']'));

        // Create polygon for the map
        const polygon = L.polygon(coords, { color: 'red' }).addTo(map);

        // Transform coordinates into the required format for the API
        const formattedCoords = coords.map(coord => ({
            latitude: coord[0],
            longitude: coord[1]
        }));

        fetch(this.action, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formattedCoords)
        })
        .then(response => response.json())
        .then(data => {
            // Add markers for each well
            data.forEach(well => {
                L.marker([well.latitude, well.longitude])
                    .bindPopup(`API Number: ${well.apiNumbers}`)
                    .addTo(map);
            });

            // Fit map to show all markers and polygon
            const bounds = polygon.getBounds();
            map.fitBounds(bounds);
        });
    });

    // Download button handler
    document.getElementById('downloadBtn').addEventListener('click', function() {
        const coordStr = document.getElementById('coordInput').value;
        const coords = JSON.parse(coordStr.replace(/\(/g, '[').replace(/\)/g, ']'));

        // Transform coordinates into the required format for the API
        const formattedCoords = coords.map(coord => ({
            latitude: coord[0],
            longitude: coord[1]
        }));

        const downloadEndpoint = '/GeoSpatial/PolygonSearchDownload';
        fetch(downloadEndpoint, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formattedCoords)
        })
        .then(response => response.blob())
        .then(blob => {
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'PolygonSearchResults.csv';
            document.body.appendChild(a);
            a.click();
            window.URL.revokeObjectURL(url);
            a.remove();
        });
    });</script>